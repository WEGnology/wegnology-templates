resourceType: Flow
resources:
  - customNodeConfig:
      fields:
        - description: ''
          id: deviceId
          label: Device ID
          required: true
          type: stringTemplate
        - description: ''
          id: attName
          label: Attribute Name Variable
          required: true
          type: stringTemplate
        - description: ''
          id: attNameStatus
          label: Attribute Name Status Variable
          required: false
          type: stringTemplate
        - defaultValue: 0
          description: >-
            Se o valor for igual ou menor ao indicado ele não será enviado para
            API
          id: varTrigger
          label: Variable Trigger
          required: false
          type: numberTemplate
        - description: ''
          id: points
          label: Prediction
          required: true
          type: numberTemplate
          validMin: 1
        - defaultValue: 24
          description: >-
            Passo da Predição (Horas). Padrão é 1 Dia mas pode ser necessário
            diminuir o passo caso tenha poucos dados.
          id: predictionStep
          label: Passo da Predição (Horas)
          required: false
          type: numberTemplate
        - defaultValue: 1
          description: Define a Frequência com que será feita a predição
          id: predictionFrequency
          label: Frequência de Predição (Dias)
          required: false
          type: numberTemplate
        - description: ''
          id: bmdUser
          label: BirminD Username
          required: true
          type: stringTemplate
        - description: ''
          id: bmdPassword
          label: BirminD Password
          required: true
          type: stringTemplate
        - description: ''
          id: projeto
          label: Project Id
          required: true
          type: numberTemplate
        - description: ''
          id: email
          label: Notification Email
          required: false
          type: stringTemplate
        - defaultValue: '0'
          description: ''
          id: alarms
          label: Send E-mail Alarms
          options:
            - label: 'True'
              value: '1'
            - label: 'False'
              value: '0'
          type: select
        - defaultValue: 'null'
          description: ''
          id: upperCriticalLimit
          label: Upper Critical Limit
          required: false
          type: stringTemplate
        - defaultValue: 'null'
          description: ''
          id: lowerCriticalLimit
          label: Lower Critical Limit
          required: false
          type: stringTemplate
        - defaultValue: 'null'
          description: URL na qual será enviado o callback
          id: callback
          label: Callback URL
          required: false
          type: stringTemplate
        - defaultValue: 90
          description: >-
            Number of days used to calculate prediction, A number too high may
            lead to a lower score
          id: daysUsedPrediction
          label: Days used for Prediction
          required: false
          type: numberTemplate
      outputCount: 1
      resultMode: optional
    customNodeSupports:
      - cloud
    description: Custom node made to attend MFM request.
    flowClass: customNode
    globals: []
    id: ~exportplaceholderid-flow-customNodePredictMfm-0~
    name: Custom Node Predict MFM
    nodes:
      - config:
          branchIndexTemplate: 0
          resultSourcePath: data.output
        id: e8eOjLCkgE
        meta:
          category: customNodeEnd
          description: End the Custom Node run
          label: Output
          name: custom-node-end-single
          x: 680
          'y': 4940
        outputIds: []
        type: CustomNodeCapNode
      - config:
          defaultValue: 'null'
          defaultValueType: json
          getAll: false
          keyName: aux
          valuePath: aux
        id: 682fr5Ibo0
        meta:
          category: data
          description: ''
          label: 'Storage: Get Value'
          name: get-value
          x: 660
          'y': 120
        outputIds:
          - - buMHdhp1sR
        type: GetValueNode
      - config:
          expression: '{{aux}}'
        id: o1AB1-tv1p
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 660
          'y': 700
        outputIds:
          - - rmKnDi4lof
          - - ZFivwgYIQb
        type: ConditionalNode
      - config:
          authCredentials: {}
          authType: none
          bodyTemplate: |-
            [{
              "verbose_name":"{{data.attName}}",
              "input_name":"{{data.attName}}",
              "input_type":"continuous"
            }
            ]
          caCertTemplate: ''
          disableSSLVerification: false
          encodingTemplate: utf8
          errorBehavior: throw
          errorPath: ''
          headerInfo:
            - key: Content-Type
              valueTemplate: application/json
            - key: Authorization
              valueTemplate: ' Bearer {{data.response.body.access}}'
          method: POST
          requestEncodingTemplate: utf8
          responsePath: data.vare
          timeoutTemplate: '30'
          uriTemplate: >-
            http://api.birmind.cloud/api/v1/data/projects/{{data.projeto}}/data-inputs/
        id: _BCQjngYyb
        meta:
          category: data
          description: ''
          label: Criar variable ID
          name: http
          x: 280
          'y': 2160
        outputIds:
          - - Un6kMWk-iW
        type: HttpNode
      - config:
          authCredentials: {}
          authType: none
          bodyTemplate: |-
            {
              "username": "{{data.bmdUser}}",
              "password": "{{data.bmdPassword}}"
            }
          caCertTemplate: ''
          disableSSLVerification: false
          encodingTemplate: utf8
          errorBehavior: throw
          errorPath: ''
          headerInfo:
            - key: Content-Type
              valueTemplate: application/json
          method: POST
          requestEncodingTemplate: utf8
          responsePath: data.response
          timeoutTemplate: '30'
          uriTemplate: 'https://api.birmind.cloud/api/v1/get-token/'
        id: buMHdhp1sR
        meta:
          category: data
          description: ''
          label: Get Token
          name: http
          x: 660
          'y': 200
        outputIds:
          - - qREtF3uyOV
        type: HttpNode
      - config:
          keyName: aux
          resultPath: ''
          value: aux
          valueType: path
        id: zLLIejcZeM
        meta:
          category: data
          description: ''
          label: 'Storage: Set Value'
          name: store-value
          x: 680
          'y': 4620
        outputIds:
          - - hJBt_vnCz6
        type: StoreValueNode
      - config:
          authCredentials: {}
          authType: none
          bodyTemplate: '{{envio}}'
          caCertTemplate: ''
          disableSSLVerification: false
          encodingTemplate: utf8
          errorBehavior: throw
          errorPath: ''
          headerInfo:
            - key: Content-Type
              valueTemplate: application/json
            - key: Authorization
              valueTemplate: 'Bearer {{data.response.body.access}}'
          method: POST
          requestEncodingTemplate: utf8
          responsePath: responseApi
          timeoutTemplate: ''
          uriTemplate: >-
            http://api.birmind.cloud/api/v1/data/projects/{{aux.project}}/data-values/insert/
        id: mDdf5FN0SR
        meta:
          category: output
          description: ''
          label: HTTP
          name: http
          x: 680
          'y': 3960
        outputIds:
          - - 9xdq3ncxmp
            - peBr2eDiAo
        type: HttpNode
      - config:
          authCredentials: {}
          authType: none
          bodyTemplate: "{   \n\t\"name\":\"{{data.attName}}_Forecast\",\n    \"strategy\":\"281bf348-f161-4f95-b971-30cc46417246\",\n    \"data_source\":\"data_api\",\n    \"strategy_config\": {\n        \"predict_steps\": {{data.points}},\n        \"persist\":true,\n        \"update\":\"refit\",\n        \"auto_ml_choices\":[\"linear\", \"linear-seasonal\", \"modular\"],\n        \"persistence_duration\" :{\n            \"days\":30\n        }\n    },\n    \"data_source_data\":{\n        \"input_list\":[\"{{aux.data_input}}\"]\n    },\n    \"inputs_map\": {\n      \"y\": \"{{aux.data_input}}\"\n    },\n    \"preprocess_rule\":\"{{data.preprocessRule.body.id}}\"\n\t}\n"
          caCertTemplate: ''
          disableSSLVerification: false
          encodingTemplate: utf8
          errorBehavior: throw
          errorPath: ''
          headerInfo:
            - key: Content-Type
              valueTemplate: application/json
            - key: Authorization
              valueTemplate: ' Bearer {{data.response.body.access}}'
          method: POST
          requestEncodingTemplate: utf8
          responsePath: data.calcRule
          timeoutTemplate: '30'
          uriTemplate: >-
            http://api.birmind.cloud/api/v1/calc/projects/{{data.projeto}}/calculation-rules/
        id: Xo-3oHjZM6
        meta:
          category: data
          description: ''
          label: Create Calc Rule
          name: http
          x: 280
          'y': 2840
        outputIds:
          - - gMy_risKlt
            - LukwHZmUje
        type: HttpNode
      - config: {}
        id: YBKRKKB0I1
        meta:
          annotationText: 'Sem variável auxiliar, 1ª vez que o node é ativado'
          category: annotation
          height: 220
          label: Note
          name: note
          width: 260
          x: 40
          'y': 400
        outputIds: []
        type: AnnotationNode
      - config:
          authCredentials: {}
          authType: none
          bodyTemplate: |-
            {
              "name":"Prediction_DeviceID_{{data.deviceId}}_attribute_{{data.attName}}"
            }
          caCertTemplate: ''
          disableSSLVerification: false
          encodingTemplate: utf8
          errorBehavior: throw
          errorPath: ''
          headerInfo:
            - key: Content-Type
              valueTemplate: application/json
            - key: Authorization
              valueTemplate: ' Bearer {{data.response.body.access}}'
          method: POST
          requestEncodingTemplate: utf8
          responsePath: data.project
          timeoutTemplate: '30'
          uriTemplate: >-
            http://api.birmind.cloud/api/v1/authentication/companies/d8f1421e-50d9-4a81-92e5-f549d14a4617/projects/
        id: yL1YbaFYJf
        meta:
          category: data
          description: ''
          label: Criar Projeto
          name: http
          x: 200
          'y': 880
        outputIds:
          - - 3Qo8_2oYJI
        type: HttpNode
      - config:
          script: "const indexFailure = payload.data.result.findIndex(element => element > payload.data.upperCriticalLimit || element < payload.data.lowerCriticalLimit)\r\n\r\nif (indexFailure > 0) {\r\n    payload.data.timestampFailure = payload.data.predictTimestamps[indexFailure]\r\n    payload.data.notificationType = \"failure\"\r\n}\r\n\r\n\r\n"
        id: jhB3Hvt3WJ
        meta:
          category: logic
          description: ''
          label: Function
          name: function
          x: 1360
          'y': 2440
        outputIds:
          - - Y5bHRn08yE
        type: RawFunctionNode
      - config:
          operation: format
          resultPath: data.timestampFailure
          sourcePath: data.timestampFailure
        id: hasrUBZeaX
        meta:
          category: logic
          description: ''
          label: Date/Time
          name: date-time
          x: 1500
          'y': 2600
        outputIds:
          - - M3Bh8vcdSy
        type: DateTimeNode
      - config:
          expression: '{{data.timestampFailure}}'
        id: Y5bHRn08yE
        meta:
          category: logic
          description: ''
          label: Failure
          name: conditional
          x: 1360
          'y': 2520
        outputIds:
          - - M3Bh8vcdSy
          - - hasrUBZeaX
        type: ConditionalNode
      - config:
          bodyTemplate: |
            <!doctype html>
            <html>
              <head>
                <title></title>
                <meta name="viewport" content="width=device-width" />
                <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
              </head>
              <body>
                <div>Aviso de alerta: O indicador da variável {{data.attName}} irá chegar em 30% em {{data.timestampWarning}} e em 0% em {{data.timestampFailure}}</div>
              </body>
            </html>
          fromTemplate: ''
          resultPath: data.emailresult
          subjectTemplate: Wegnology Notification
          toAddresses:
            - '{{data.email}}'
        id: iXSx0XI7j0
        meta:
          category: output
          description: ''
          label: Email
          name: structure-email
          x: 1280
          'y': 3000
        outputIds:
          - - 8BH7XflHTQ
        type: StructureEmailNode
      - config:
          cases:
            - caseLabel: ''
              caseTemplate: both
              dontBreak: false
            - caseLabel: ''
              caseTemplate: warning
              dontBreak: false
            - caseLabel: ''
              caseTemplate: failure
              dontBreak: false
          switchTemplate: '{{data.notificationType}}'
        id: M3Bh8vcdSy
        meta:
          category: logic
          description: ''
          label: Switch
          name: switch
          x: 1460
          'y': 2880
        outputIds:
          - - 8BH7XflHTQ
          - - iXSx0XI7j0
          - - mH6NhSTUAC
          - - ujERH5pX0i
        type: SwitchNode
      - config:
          bodyTemplate: |
            <!doctype html>
            <html>
              <head>
                <title></title>
                <meta name="viewport" content="width=device-width" />
                <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
              </head>
              <body>
                <div>Aviso de alerta: O indicador da variável {{data.attName}} irá chegar em 30% em {{data.timestampWarning}}</div>
              </body>
            </html>
          fromTemplate: ''
          resultPath: data.emailresult
          subjectTemplate: Wegnology Notification
          toAddresses:
            - '{{data.email}}'
        id: mH6NhSTUAC
        meta:
          category: output
          description: ''
          label: Email
          name: structure-email
          x: 1460
          'y': 3000
        outputIds:
          - - 8BH7XflHTQ
        type: StructureEmailNode
      - config:
          bodyTemplate: |
            <!doctype html>
            <html>
              <head>
                <title></title>
                <meta name="viewport" content="width=device-width" />
                <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
              </head>
              <body>
                <div>Aviso de alerta: O indicador da variável {{data.attName}} irá chegar em 0% em {{data.timestampFailure}}</div>
              </body>
            </html>
          fromTemplate: ''
          resultPath: data.emailresult
          subjectTemplate: Wegnology Notification
          toAddresses:
            - '{{data.email}}'
        id: ujERH5pX0i
        meta:
          category: output
          description: ''
          label: Email
          name: structure-email
          x: 1640
          'y': 3000
        outputIds:
          - - 8BH7XflHTQ
        type: StructureEmailNode
      - config:
          action: timeSeriesQuery
          params:
            - name: query
              type: json
              value: "{\r\n  \"aggregation\": \"MEAN\",\r\n  \"attributes\": [\r\n    \"{{data.attName}}\",\r\n    \"{{data.attNameStatus}}\"\r\n  ],\r\n  \"deviceIds\": [\"{{data.deviceId}}\"],\r\n  \"duration\": 7776000000,\r\n  \"end\": 0,\r\n  \"resolution\": 600000\r\n}"
          resource: data
          responsePath: data.oldTimeSeries
        id: JB1XV3oJRX
        meta:
          category: data
          description: ''
          label: WEGnology API
          name: losantapi
          x: 380
          'y': 2480
        outputIds:
          - - mxk4KBQGpU
        type: LosantApiNode
      - config: {}
        id: C2gfJ9Yppe
        meta:
          annotationText: Time series query
          category: annotation
          height: 0
          label: Note
          name: note
          width: 0
          x: 80
          'y': 2400
        outputIds: []
        type: AnnotationNode
      - config:
          script: "payload.aux = {}\r\npayload.aux.data_input = payload.data.vare.body[0].id\r\n//payload.aux.data_input_kpi = payload.data.vare.body[1].id\r\npayload.aux.preprocessRule = payload.data.preprocessRule.body.id\r\n//payload.aux.project = payload.data.project.body\r\n//alterar quando puder criar licenças automaticamente\r\npayload.aux.project = payload.data.projeto\r\n\r\npayload.data.oldTimeSeries = payload.data.oldTimeSeries.result.devices[payload.data.deviceId].points\r\npayload.envio = []\r\nlet nota\r\n\r\n\r\n\r\npayload.data.oldTimeSeries.forEach(function(point){\r\n\r\n  if(payload.data.attNameStatus){\r\n\r\n    if(point.data[payload.data.attNameStatus] != 0 & point.data[payload.data.attName] > payload.data.varTrigger){  \r\n      \r\n      payload.envio.push({\r\n        \"data_input\": payload.aux.data_input,\r\n        \"timestamp\": point.time,\r\n        \"value\": point.data[payload.data.attName]\r\n      })\r\n    }\r\n  } else {\r\n    if(payload.data.attNameStatus === \"\" & point.data[payload.data.attName] > payload.data.varTrigger){  \r\n      \r\n      payload.envio.push({\r\n        \"data_input\": payload.aux.data_input,\r\n        \"timestamp\": point.time,\r\n        \"value\": point.data[payload.data.attName]\r\n      })\r\n    }\r\n  }\r\n})\r\n\r\npayload.aux.lastTimeSeries = payload.data.oldTimeSeries[payload.data.oldTimeSeries.length-1].time\r\npayload.envio = JSON.stringify(payload.envio)\r\n\r\nif (payload.data.predictionStep == 24){\r\n  payload.data.predictionStepType = 'D',\r\n  payload.data.predictionStepValue = 1\r\n} else {\r\n  payload.data.predictionStepType = 'H',\r\n  payload.data.predictionStepValue = payload.data.predictionStep\r\n}\r\n\r\n\r\n\r\n"
        id: tG_tavRK9p
        meta:
          category: logic
          description: ''
          label: Function
          name: function
          x: 280
          'y': 2760
        outputIds:
          - - jnwv7TbUAT
            - Xo-3oHjZM6
        type: RawFunctionNode
      - config:
          expression: '{{envio}}'
        id: 8BH7XflHTQ
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 680
          'y': 3280
        outputIds:
          - - qCtbpUZCmw
          - - mDdf5FN0SR
        type: ConditionalNode
      - config:
          script: "payload.aux.calcRuleId = payload.data.calcRule.body.id\r\n//payload.aux.updateCalcRule = \"3month+\"\r\n\r\n//salvar informações do custom-node\r\npayload.aux.attName = payload.data.attName\r\npayload.aux.deviceId = payload.data.deviceId"
        id: H4WqSOjsux
        meta:
          category: logic
          description: ''
          label: Function
          name: function
          x: 280
          'y': 3000
        outputIds:
          - - vDYQtMzkeF
            - HRvR8hblVJ
        type: RawFunctionNode
      - config:
          authCredentials: {}
          authType: none
          caCertTemplate: ''
          disableSSLVerification: false
          encodingTemplate: utf8
          errorBehavior: throw
          errorPath: ''
          headerInfo:
            - key: Content-Type
              valueTemplate: application/json
            - key: Authorization
              valueTemplate: ' Bearer {{data.response.body.access}}'
          method: GET
          requestEncodingTemplate: utf8
          responsePath: data.forecastResult
          timeoutTemplate: '30'
          uriTemplate: >-
            http://api.birmind.cloud/api/v1/result/projects/{{aux.project}}/calc-results/?calculation_rule={{aux.calcRuleId}}
        id: ZFivwgYIQb
        meta:
          category: data
          description: ''
          label: Checar Resultados
          name: http
          x: 880
          'y': 1120
        outputIds:
          - - CjmvdjZ_4S
        type: HttpNode
      - config:
          expression: '{{data.forecastResult.body.results.length}} > 0'
        id: dmly02kP-M
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 880
          'y': 1320
        outputIds:
          - - 8X_D9GpEHD
          - - ddUJkkpkh-
        type: ConditionalNode
      - config:
          authCredentials: {}
          authType: none
          bodyTemplate: "{\n\t\"items\": [\n          {\n              \"license_product\": \"621092c3-c844-46e8-82dd-aa2a0aa46721\",\n              \"quantity\": 1\n          }\n    ]\n}"
          caCertTemplate: ''
          disableSSLVerification: false
          encodingTemplate: utf8
          errorBehavior: throw
          errorPath: ''
          headerInfo:
            - key: Content-Type
              valueTemplate: application/json
            - key: Authorization
              valueTemplate: ' Bearer {{data.response.body.access}}'
          method: POST
          requestEncodingTemplate: utf8
          responsePath: data.licenseOrder
          timeoutTemplate: '30'
          uriTemplate: 'http://api.birmind.cloud/api/v1/authentication/license-orders/'
        id: iwAKQRhBtv
        meta:
          category: data
          description: ''
          label: Criar Licença
          name: http
          x: 200
          'y': 1120
        outputIds:
          - - pb4_QRM6hb
        type: HttpNode
      - config:
          authCredentials: {}
          authType: none
          bodyTemplate: "{\n\t\"status\":\"confirmed\"\n}"
          caCertTemplate: ''
          disableSSLVerification: false
          encodingTemplate: utf8
          errorBehavior: throw
          errorPath: ''
          headerInfo:
            - key: Content-Type
              valueTemplate: application/json
            - key: Authorization
              valueTemplate: ' Bearer {{data.response.body.access}}'
          method: PUT
          requestEncodingTemplate: utf8
          responsePath: data.confirmLicense
          timeoutTemplate: '30'
          uriTemplate: >-
            http://api.birmind.cloud/api/v1/authentication/license-orders/{{data.licenseOrderId}}/status/
        id: wasadXp6MG
        meta:
          category: data
          description: ''
          label: Confirmar pedido de licença
          name: http
          x: 200
          'y': 1440
        outputIds:
          - - 153nwdFnGg
        type: HttpNode
      - config:
          authCredentials: {}
          authType: none
          caCertTemplate: ''
          disableSSLVerification: false
          encodingTemplate: utf8
          errorBehavior: payloadPath
          errorPath: data.error
          headerInfo:
            - key: Content-Type
              valueTemplate: application/json
            - key: Authorization
              valueTemplate: ' Bearer {{data.response.body.access}}'
          method: GET
          requestEncodingTemplate: utf8
          responsePath: data.getLicense
          timeoutTemplate: '30'
          uriTemplate: >-
            http://api.birmind.cloud/api/v1/authentication/companies/d8f1421e-50d9-4a81-92e5-f549d14a4617/licenses/?license_order={{data.licenseOrderId}}
        id: a4XJLv65CU
        meta:
          category: data
          description: ''
          label: Obter Licença
          name: http
          x: 200
          'y': 1700
        outputIds:
          - - MsGkRqOy0J
        type: HttpNode
      - config:
          authCredentials: {}
          authType: none
          bodyTemplate: "{\r\n    \"project\":{{data.projectId}}\r\n}"
          caCertTemplate: ''
          disableSSLVerification: false
          encodingTemplate: utf8
          errorBehavior: throw
          errorPath: ''
          headerInfo:
            - key: Content-Type
              valueTemplate: application/json
            - key: Authorization
              valueTemplate: ' Bearer {{data.response.body.access}}'
          method: PUT
          requestEncodingTemplate: utf8
          responsePath: data.applyLicense
          timeoutTemplate: '30'
          uriTemplate: >-
            http://api.birmind.cloud/api/v1/authentication/licenses/{{data.license}}/apply-project/
        id: AcE1HvIILs
        meta:
          category: data
          description: ''
          label: Aplicar Licença
          name: http
          x: 200
          'y': 2080
        outputIds:
          - - _BCQjngYyb
        type: HttpNode
      - config:
          action: timeSeriesQuery
          params:
            - name: query
              type: json
              value: "{\r\n  \"aggregation\": \"MEAN\",\r\n  \"attributes\": [\r\n    \"{{data.attName}}\",\r\n    \"{{data.attNameStatus}}\"\r\n  ],\r\n  \"deviceIds\": [\"{{data.deviceId}}\"],\r\n  \"duration\": {{diffTime}},\r\n  \"end\": 0,\r\n  \"resolution\": 600000\r\n}"
          resource: data
          responsePath: data.timeseries
        id: vz5nHGiAiD
        meta:
          category: data
          description: ''
          label: WEGnology API
          name: losantapi
          x: 580
          'y': 3740
        outputIds:
          - - aHJHLKjYk_
        type: LosantApiNode
      - config:
          script: "payload.data.timeseries = payload.data.timeseries.result.devices[payload.data.deviceId].points\r\npayload.envio = []\r\nlet nota\r\n\r\n\r\n\r\npayload.data.timeseries.forEach(function(point){\r\n\r\n  if(payload.data.attNameStatus){\r\n\r\n    if(point.data[payload.data.attNameStatus] != 0 & point.data[payload.data.attName] > payload.data.varTrigger){  \r\n      \r\n      payload.envio.push({\r\n        \"data_input\": payload.aux.data_input,\r\n        \"timestamp\": point.time,\r\n        \"value\": point.data[payload.data.attName]\r\n      })\r\n    }\r\n  } else {\r\n    if(payload.data.attNameStatus === \"\" & point.data[payload.data.attName] > payload.data.varTrigger){  \r\n      \r\n      payload.envio.push({\r\n        \"data_input\": payload.aux.data_input,\r\n        \"timestamp\": point.time,\r\n        \"value\": point.data[payload.data.attName]\r\n      })\r\n    }\r\n  }\r\n})\r\n\r\n\r\n\r\n\r\npayload.aux.lastTimeSeries = payload.data.timeseries[payload.data.timeseries.length-1].time\r\npayload.envio = JSON.stringify(payload.envio)\r\n\r\n\r\n\r\n"
        id: aHJHLKjYk_
        meta:
          category: logic
          description: ''
          label: Function
          name: function
          x: 500
          'y': 3840
        outputIds:
          - - mDdf5FN0SR
            - 7kA9jdxbQC
        type: RawFunctionNode
      - config:
          operation: format
          resultFormatString: 'YYYY-MM-DD HH:mm:ss'
          resultPath: lastTime
          sourcePath: aux.lastTimeSeries
          timezone: UTC
        id: qCtbpUZCmw
        meta:
          category: logic
          description: ''
          label: Date/Time
          name: date-time
          x: 500
          'y': 3360
        outputIds:
          - - Yp6H2qDwHc
        type: DateTimeNode
      - config:
          operation: format
          resultFormatString: 'YYYY-MM-DD HH:mm:ss'
          resultPath: currentTime
          timezone: UTC
        id: Yp6H2qDwHc
        meta:
          category: logic
          description: ''
          label: Date/Time
          name: date-time
          x: 500
          'y': 3440
        outputIds:
          - - WK-fdDqnmJ
        type: DateTimeNode
      - config:
          diffDataPath: lastTime
          operation: diff
          resultPath: diffTime
          sourcePath: currentTime
        id: WK-fdDqnmJ
        meta:
          category: logic
          description: ''
          label: Date/Time
          name: date-time
          x: 500
          'y': 3540
        outputIds:
          - - 90kvn4fjTd
        type: DateTimeNode
      - config:
          authCredentials: {}
          authType: none
          bodyTemplate: "{   \n\t\"preprocess_config\":{\n\t\t\"input_configurations\": {\n\t\t    \"y\": [\n        \t    {\n            \t    \"args\": {\"errors\": \"coerce\"},\n            \t    \"function\": \"convert_to_numeric\"\n       \t        },\n\t\t\t\t{\n\t\t\t\t\t\"args\": {\"method\":\"normalize\", \"normalization_method\":\"min/max\"},\n            \t    \"function\": \"scale_series\"\n\t\t\t\t}\n            ]\n  },\n\t\"global_configurations\": [\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"args\": {\"keep\": \"first\", \"input_types\": \"continuous\", \"data_types\":\"dataframe\"},\n\t\t\t\t\t\t\t\t\t\t\"function\": \"remove_duplicated_index\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"function\": \"nan_processing\",\n\t\t\t\t\t\t\t\t\t\t\"args\": {\"method\": \"interpolate\", \"interpolate_method\":\"linear\"}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"function\":\"resample_dataset\",\n\t\t\t\t\t\t\t\t\t\t\"args\":{\n\t\t\t\t\t\t\t\t\t\t\t\"frequency_value\":{{data.predictionStepValue}},\n\t\t\t\t\t\t\t\t\t\t\t\"frequency_unit\":\"{{data.predictionStepType}}\",\n\t\t\t\t\t\t\t\t\t\t\t\"default_numeric\":\"mean\",\n\t\t\t\t\t\t\t\t\t\t\t\"default_non_numeric\":\"last\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"function\": \"nan_processing\",\n\t\t\t\t\t\t\t\t\t\t\"args\": {\"method\": \"interpolate\", \"interpolate_method\":\"linear\"}\n\t\t\t\t\t\t\t\t\t}\n\t]\n\t}\n}"
          caCertTemplate: ''
          disableSSLVerification: false
          encodingTemplate: utf8
          errorBehavior: throw
          errorPath: ''
          headerInfo:
            - key: Content-Type
              valueTemplate: application/json
            - key: Authorization
              valueTemplate: ' Bearer {{data.response.body.access}}'
          method: POST
          requestEncodingTemplate: utf8
          responsePath: data.preprocessRule
          timeoutTemplate: '30'
          uriTemplate: >-
            http://api.birmind.cloud/api/v1/data/projects/{{data.projeto}}/preprocess-rules/
        id: jo9NwQRO-0
        meta:
          category: data
          description: ''
          label: Create Preprocess Rule
          name: http
          x: 280
          'y': 2680
        outputIds:
          - - tG_tavRK9p
        type: HttpNode
      - config:
          rules:
            - destination: data.licenseOrderId
              type: set
              valueTemplate: '{{data.licenseOrder.body.id}}'
        id: C7_PFLcXFO
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 200
          'y': 1280
        outputIds:
          - - 49tStV4-__
        type: MutateNode
      - config:
          rules:
            - destination: data.license
              type: set
              valueTemplate: '{{data.getLicense.body.results.[0].id}}'
        id: Y5IIpz5HqW
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 200
          'y': 1880
        outputIds:
          - - 0u9ySN3eLZ
        type: MutateNode
      - config:
          rules:
            - destination: data.projectId
              type: set
              valueTemplate: '{{data.project.body.id}}'
            - destination: data.output
              type: set
              valueTemplate: NewPrediction
        id: JLVEAFYt3u
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 200
          'y': 1040
        outputIds:
          - - iwAKQRhBtv
        type: MutateNode
      - config:
          action: timeSeriesQuery
          params:
            - name: query
              type: json
              value: "{\r\n  \"aggregation\": \"MEAN\",\r\n  \"attributes\": [\r\n    \"{{data.attName}}\"\r\n  ],\r\n  \"deviceIds\": [\"{{data.deviceId}}\"],\r\n  \"duration\": 7776000000,\r\n  \"end\": 0,\r\n  \"resolution\": 600000\r\n}"
          resource: data
          responsePath: data.oldTimeSeries
        id: gDUd5rJ92_
        meta:
          category: data
          description: ''
          label: WEGnology API
          name: losantapi
          x: 180
          'y': 2480
        outputIds:
          - - mxk4KBQGpU
        type: LosantApiNode
      - config:
          expression: '{{data.attNameStatus}}'
        id: VhcRNEL05H
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 280
          'y': 2380
        outputIds:
          - - gDUd5rJ92_
          - - JB1XV3oJRX
        type: ConditionalNode
      - config:
          expression: '{{data.attNameStatus}}'
        id: 90kvn4fjTd
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 500
          'y': 3640
        outputIds:
          - - JVXD8p6bF2
          - - vz5nHGiAiD
        type: ConditionalNode
      - config:
          action: timeSeriesQuery
          params:
            - name: query
              type: json
              value: "{\r\n  \"aggregation\": \"MEAN\",\r\n  \"attributes\": [\r\n    \"{{data.attName}}\"\r\n  ],\r\n  \"deviceIds\": [\"{{data.deviceId}}\"],\r\n  \"duration\": {{diffTime}},\r\n  \"end\": 0,\r\n  \"resolution\": 600000\r\n}"
          resource: data
          responsePath: data.timeseries
        id: JVXD8p6bF2
        meta:
          category: data
          description: ''
          label: WEGnology API
          name: losantapi
          x: 400
          'y': 3740
        outputIds:
          - - aHJHLKjYk_
        type: LosantApiNode
      - config:
          delay: '0.5'
        id: 49tStV4-__
        meta:
          category: logic
          description: ''
          label: Delay
          name: delay
          x: 200
          'y': 1360
        outputIds:
          - - wasadXp6MG
        type: DelayNode
      - config:
          rules:
            - destination: data.result
              type: set
              valueTemplate: '{{data.forecastResult.body.results.[0].result.results}}'
            - destination: data.predictDateRange
              type: set
              valueTemplate: '{{data.forecastResult.body.results.[0].calc_range}}'
            - destination: data.predictTimestamps
              type: set
              valueTemplate: >-
                {{data.forecastResult.body.results.[0].result.predict_timestamp}}
            - destination: data.predictScore
              type: set
              valueTemplate: '{{data.forecastResult.body.results.[0].result.score}}'
        id: ddUJkkpkh-
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 1040
          'y': 1460
        outputIds:
          - - Ek-R8A7RlL
        type: MutateNode
      - config:
          bodyTemplate: |
            <!doctype html>
            <html>
              <head>
                <title></title>
                <meta name="viewport" content="width=device-width" />
                <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
              </head>
              <body>
                <div>Nova Licença de Predição da BirminD Cadastrada! Anote o projeto criado</div>
                <div><p>projeto = {{data.projectId}}</p></div>
              </body>
            </html>
          fromTemplate: ''
          resultPath: data.emailresult
          subjectTemplate: Wegnology Notification
          toAddresses:
            - '{{data.email}}'
            - mfmcustomnodes@birmind.com.br
        id: HRvR8hblVJ
        meta:
          category: output
          description: ''
          label: Email
          name: structure-email
          x: 280
          'y': 3120
        outputIds:
          - - 8BH7XflHTQ
        type: StructureEmailNode
      - config:
          script: "payload.prediction = payload.data.result.map(function(x,i){\r\n    return {\"value\":x,\"timestamp\":payload.data.predictTimestamps[i]}\r\n})\r\n\r\n//cria 'resolution' Query do WEGnology\r\nif (payload.data.predictionStep == 24){\r\n    payload.data.predictionRes = 86400000\r\n} else {\r\n    payload.data.predictionRes = 3600000 * payload.data.predictionStep\r\n}"
        id: Ek-R8A7RlL
        meta:
          category: logic
          description: ''
          label: Function
          name: function
          x: 1040
          'y': 1620
        outputIds:
          - - Fo35ZmtM3_
            - QfLFpovpdy
        type: RawFunctionNode
      - config:
          expression: '{{data.alarms}} == 1'
        id: J-dvLdisxz
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 1040
          'y': 2320
        outputIds:
          - - JwleDJn_dq
          - - jhB3Hvt3WJ
        type: ConditionalNode
      - config:
          script: "payload.data.output = {\r\n    \"prediction\":payload.prediction,\r\n    \"predictionDateRange\":payload.data.predictDateRange,\r\n    \"score\":payload.data.predictScore,\r\n    \"timeseries\":payload.data.timeseriesOld\r\n}"
        id: 3Xel4-b7dw
        meta:
          category: logic
          description: ''
          label: Function
          name: function
          x: 1040
          'y': 2220
        outputIds:
          - - J-dvLdisxz
        type: RawFunctionNode
      - config:
          expression: '{{responseAPI.statusCode}} == 503'
        id: 9xdq3ncxmp
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 680
          'y': 4040
        outputIds:
          - - NISPto7ehV
          - - fi0b3LD49V
        type: ConditionalNode
      - config:
          script: >-
            const rated = payload.data.ratedValue

            const lcl = payload.data.lowerCriticalLimit 

            const lal = payload.data.lowerAcceptableLimit

            const ucl = payload.data.upperCriticalLimit

            const ual = payload.data.upperAcceptableLimit

            payload.aux = payload.data.aux

            if (ucl != "" && ual != "" && rated != "" && lcl == "" && lal == "")
            {
                payload.data.type = 'upper'
            } else if (ucl == "" && ual == "" && rated != "" && lcl != "" && lal
            != "") {
                payload.data.type = 'lower'
            } else if (ucl != "" && ual != "" && rated != "" && lcl != "" && lal
            != "") {
                payload.data.type = 'band'
            } else {
                payload.data.type = "Error: KPI Limits configured wrong, check and try again"
            }
        id: YeToa58H6a
        meta:
          category: logic
          description: ''
          label: Function
          name: function
          x: 1120
          'y': 200
        outputIds:
          - - 67xUCWpq39
        type: RawFunctionNode
      - config:
          branchIndexTemplate: 1
          resultSourcePath: data.type
        id: 5tZxoETSti
        meta:
          category: customNodeEnd
          description: Take the "True" path
          label: Output
          name: custom-node-end-single
          x: 1260
          'y': 480
        outputIds: []
        type: CustomNodeCapNode
      - config:
          expression: >-
            {{ data.type }} == "Error: KPI Limits configured wrong, check and
            try again" 
        id: 67xUCWpq39
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 1120
          'y': 300
        outputIds:
          - - buMHdhp1sR
          - - 5tZxoETSti
        type: ConditionalNode
      - config:
          defaultValue: 'null'
          defaultValueType: json
          getAll: false
          keyName: aux
          valuePath: aux
        id: HUtTrE9Z9Z
        meta:
          category: data
          description: ''
          label: 'Storage: Get Value'
          name: get-value
          x: 1200
          'y': 720
        outputIds: []
        type: GetValueNode
      - config:
          rules:
            - destination: data.output
              type: set
              valueTemplate: '0'
        id: 8X_D9GpEHD
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 860
          'y': 1540
        outputIds:
          - - 5Ra4MhzZbm
        type: MutateNode
      - config:
          expression: '{{data.vare.statusCode}} === 201'
        id: Un6kMWk-iW
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 280
          'y': 2280
        outputIds:
          - - 2cgQvEpq4q
          - - VhcRNEL05H
        type: ConditionalNode
      - config:
          message: ''
          property: ''
        id: Fo35ZmtM3_
        meta:
          category: output
          description: ''
          label: Debug
          name: debug
          x: 1360
          'y': 1900
        outputIds: []
        type: DebugNode
      - config:
          cases:
            - caseLabel: ''
              caseTemplate: NewPrediction
              dontBreak: false
            - caseLabel: ''
              caseTemplate: '0'
              dontBreak: false
            - caseLabel: ''
              caseTemplate: NoPrediction
              dontBreak: false
            - caseLabel: ''
              caseTemplate: error_data
              dontBreak: false
          switchTemplate: '{{data.output}}'
        id: hJBt_vnCz6
        meta:
          category: logic
          description: ''
          label: Switch
          name: switch
          x: 680
          'y': 4700
        outputIds:
          - - e8eOjLCkgE
          - - WyzUpvCLW0
          - - ZFDe7X1W6B
          - - bTkYO7opU_
          - - o23dlJBvV6
        type: SwitchNode
      - config:
          rules:
            - destination: data.output
              type: set
              valueTemplate: Nova Predicao criada
        id: WyzUpvCLW0
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 360
          'y': 4820
        outputIds:
          - - e8eOjLCkgE
        type: MutateNode
      - config:
          rules:
            - destination: data.output
              type: set
              valueTemplate: Resultado ainda nao disponivel
        id: ZFDe7X1W6B
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 540
          'y': 4820
        outputIds:
          - - e8eOjLCkgE
        type: MutateNode
      - config:
          rules:
            - destination: data.output
              type: set
              valueTemplate: >-
                Quantidade de dados insuficiente, Ha
                {{data.timeseriesKPI.body.length}} dados devido ao resample,
                sendo que sao necessarios ao menos {{data.requiredPoints}}
                pontos.
        id: bTkYO7opU_
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 720
          'y': 4820
        outputIds:
          - - e8eOjLCkgE
        type: MutateNode
      - config:
          message: ''
          property: ''
        id: qVjl8Wu3O4
        meta:
          category: output
          description: ''
          label: Debug
          name: debug
          x: 880
          'y': 4620
        outputIds: []
        type: DebugNode
      - config:
          action: timeSeriesQuery
          params:
            - name: query
              type: json
              value: "{\r\n  \"aggregation\": \"MEAN\",\r\n  \"attributes\": [\r\n    \"velY_on\"\r\n  ],\r\n  \"deviceIds\": [\"5f99a795227ea70006df36cc\"],\r\n  \"duration\": 7776000000,\r\n  \"end\": 0,\r\n  \"resolution\": 600000\r\n}"
          resource: data
          responsePath: data.oldTimeSeries
        id: O_9xMnHCgW
        meta:
          category: data
          description: ''
          label: WEGnology API
          name: losantapi
          x: 1500
          'y': 200
        outputIds:
          - - hRi1uJxmLT
        type: LosantApiNode
      - config:
          message: ''
          property: ''
        id: weN2uoEDWm
        meta:
          category: output
          description: ''
          label: Debug
          name: debug
          x: 1500
          'y': 420
        outputIds: []
        type: DebugNode
      - config:
          script: "payload.data.oldTimeSeries = payload.data.oldTimeSeries.result.devices[\"5f99a795227ea70006df36cc\"].points\r\npayload.envio = []\r\npayload.data.attNameStatus === \"\"\r\npayload.data.attName = 'velY_on'\r\n\r\n\r\npayload.data.oldTimeSeries.forEach(function(point){\r\n\r\n  if(payload.data.attNameStatus != 0 || payload.data.attNameStatus === \"\"){  \r\n    \r\n    payload.envio.push({\r\n      \"data_input\": \"teste\",\r\n      \"timestamp\": point.time,\r\n      \"value\": point.data[payload.data.attName]\r\n    })\r\n  }\r\n})\r\n//payload.aux.lastTimeSeries = payload.data.oldTimeSeries[payload.data.oldTimeSeries.length-1].time\r\n//payload.envio = JSON.stringify(payload.envio)\r\n\r\n\r\n\r\n"
        id: hRi1uJxmLT
        meta:
          category: logic
          description: ''
          label: Function
          name: function
          x: 1500
          'y': 320
        outputIds:
          - - weN2uoEDWm
        type: RawFunctionNode
      - config:
          message: ''
          property: ''
        id: jnwv7TbUAT
        meta:
          category: output
          description: ''
          label: Debug
          name: debug
          x: 480
          'y': 2840
        outputIds: []
        type: DebugNode
      - config:
          expression: '{{data.calcRule.statusCode}} < 300'
        id: gMy_risKlt
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 280
          'y': 2920
        outputIds:
          - - Xo-3oHjZM6
          - - H4WqSOjsux
        type: ConditionalNode
      - config:
          delay: '0.5'
        id: 153nwdFnGg
        meta:
          category: logic
          description: ''
          label: Delay
          name: delay
          x: 200
          'y': 1520
        outputIds:
          - - 2LBJj6B9op
        type: DelayNode
      - config:
          delay: '0.5'
        id: 2cgQvEpq4q
        meta:
          category: logic
          description: ''
          label: Delay
          name: delay
          x: 60
          'y': 2220
        outputIds:
          - - _BCQjngYyb
        type: DelayNode
      - config:
          expression: '{{data.getLicense.statusCode}} === 200'
        id: MsGkRqOy0J
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 200
          'y': 1780
        outputIds:
          - - NZ68XCPEi4
          - - Y5IIpz5HqW
        type: ConditionalNode
      - config:
          delay: '0.5'
        id: NZ68XCPEi4
        meta:
          category: logic
          description: ''
          label: Delay
          name: delay
          x: 0
          'y': 1740
        outputIds:
          - - a4XJLv65CU
        type: DelayNode
      - config:
          script: "if (payload.data.predictionStep == 24){\r\n  payload.data.predictionStepType = 'D',\r\n  payload.data.predictionStepValue = 1\r\n} else {\r\n  payload.data.predictionStepType = 'H',\r\n  payload.data.predictionStepValue = payload.data.predictionStep\r\n}\r\n\r\n\r\n\r\n"
        id: mxk4KBQGpU
        meta:
          category: logic
          description: ''
          label: Function
          name: function
          x: 280
          'y': 2620
        outputIds:
          - - jo9NwQRO-0
        type: RawFunctionNode
      - config:
          expression: '{{data.getLicense.body.count}} !== 0'
        id: 0u9ySN3eLZ
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 200
          'y': 1980
        outputIds:
          - - fyGHEOvklB
          - - AcE1HvIILs
        type: ConditionalNode
      - config:
          delay: '0.5'
        id: fyGHEOvklB
        meta:
          category: logic
          description: ''
          label: Delay
          name: delay
          x: 0
          'y': 1980
        outputIds:
          - - a4XJLv65CU
        type: DelayNode
      - config:
          expression: '{{aux.schedulerId}}'
        id: NISPto7ehV
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 680
          'y': 4120
        outputIds:
          - - 20QXQzcuCu
          - - zLLIejcZeM
            - qVjl8Wu3O4
        type: ConditionalNode
      - config: {}
        id: 7_uDJqjp5z
        meta:
          annotationText: >-
            Busca de dados na API com resample e verifica se há suficiente na
            'Function'
          category: annotation
          height: 160
          label: Note
          name: note
          width: 140
          x: 960
          'y': 4220
        outputIds: []
        type: AnnotationNode
      - config: {}
        id: HYFMai-be_
        meta:
          annotationText: Switches para definir mensagem a ser mostrada ao usuário
          category: annotation
          height: 160
          label: Note
          name: note
          width: 140
          x: 1180
          'y': 4680
        outputIds: []
        type: AnnotationNode
      - config: {}
        id: 0AC_1G_vQc
        meta:
          annotationText: Busca novos dados no WEGnology
          category: annotation
          height: 160
          label: Note
          name: note
          width: 140
          x: 300
          'y': 3300
        outputIds: []
        type: AnnotationNode
      - config:
          message: ''
          property: ''
        id: peBr2eDiAo
        meta:
          category: output
          description: ''
          label: Debug
          name: debug
          x: 1020
          'y': 3940
        outputIds: []
        type: DebugNode
      - config:
          authCredentials: {}
          authType: none
          caCertTemplate: ''
          disableSSLVerification: false
          encodingTemplate: utf8
          errorBehavior: throw
          errorPath: ''
          headerInfo:
            - key: Content-Type
              valueTemplate: application/json
            - key: Authorization
              valueTemplate: ' Bearer {{data.response.body.access}}'
          method: GET
          requestEncodingTemplate: utf8
          responsePath: data.searchOrder
          timeoutTemplate: '30'
          uriTemplate: >-
            http://api.birmind.cloud/api/v1/order/projects/{{aux.project}}/orders/?calculation_rule={{aux.calcRuleId}}
        id: 5Ra4MhzZbm
        meta:
          category: data
          description: ''
          label: Checar Resultados
          name: http
          x: 860
          'y': 1680
        outputIds:
          - - GhAkROJ3_L
            - QcTHB4NDo9
        type: HttpNode
      - config:
          operation: format
          resultFormatString: 'YYYY-MM-DD HH:mm:ss'
          resultPath: currentTime
          timezone: UTC
        id: GhAkROJ3_L
        meta:
          category: logic
          description: ''
          label: Date/Time
          name: date-time
          x: 840
          'y': 2120
        outputIds:
          - - kJ15RlQteJ
        type: DateTimeNode
      - config:
          numberValue: '90'
          operation: subtract
          resultFormatString: 'YYYY-MM-DD HH:mm:ss'
          resultPath: pastTime
          timezone: UTC
          unit: day
        id: kJ15RlQteJ
        meta:
          category: logic
          description: ''
          label: Date/Time
          name: date-time
          x: 840
          'y': 2200
        outputIds:
          - - BlUipTS3at
        type: DateTimeNode
      - config:
          expression: '{{data.searchOrder.body.results.length}} != 0'
        id: BlUipTS3at
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 840
          'y': 2320
        outputIds:
          - - 8BH7XflHTQ
          - - mmo98NMi13
        type: ConditionalNode
      - config:
          expression: '{{data.searchOrder.body.results.[0].dispatch_info.error_code}}'
        id: mmo98NMi13
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 840
          'y': 2420
        outputIds:
          - - 8BH7XflHTQ
          - - F9szJ2valq
        type: ConditionalNode
      - config:
          authCredentials: {}
          authType: none
          bodyTemplate: "{\n\t\"calculation_rule\": \"{{aux.calcRuleId}}\",\n\t\"initial_datetime\": \"{{pastTime}}\",\n\t\"final_datetime\": \"{{currentTime}}\",\n\t\"callback_type\":\"api\",\n\t\"callback_data\":{\n\t\t\"url\":\"{{data.callback}}\"\n\t}\n}"
          caCertTemplate: ''
          disableSSLVerification: false
          encodingTemplate: utf8
          errorBehavior: throw
          errorPath: ''
          headerInfo:
            - key: Content-Type
              valueTemplate: application/json
            - key: Authorization
              valueTemplate: ' Bearer {{data.response.body.access}}'
          method: POST
          requestEncodingTemplate: utf8
          responsePath: data.order
          timeoutTemplate: '30'
          uriTemplate: >-
            https://api.birmind.cloud/api/v1/order/projects/{{aux.project}}/orders/
        id: F9szJ2valq
        meta:
          category: data
          description: ''
          label: Create Order
          name: http
          x: 840
          'y': 2520
        outputIds:
          - - PA8TE_1C6I
        type: HttpNode
      - config:
          rules:
            - destination: data.output
              type: set
              valueTemplate: error_data
        id: nojdzmVTz9
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 760
          'y': 3120
        outputIds:
          - - 8BH7XflHTQ
        type: MutateNode
      - config:
          rules:
            - destination: data.output
              type: set
              valueTemplate: 'Erro durante o calculo da analise, sera feita uma nova tentativa'
        id: o23dlJBvV6
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 900
          'y': 4820
        outputIds:
          - - e8eOjLCkgE
        type: MutateNode
      - config:
          authCredentials: {}
          authType: none
          caCertTemplate: ''
          disableSSLVerification: false
          encodingTemplate: utf8
          errorBehavior: throw
          errorPath: ''
          headerInfo:
            - key: Content-Type
              valueTemplate: application/json
            - key: Authorization
              valueTemplate: ' Bearer {{data.response.body.access}}'
          method: GET
          requestEncodingTemplate: utf8
          responsePath: data.checkOrder
          timeoutTemplate: '30'
          uriTemplate: >-
            https://api.birmind.cloud/api/v1/order/projects/{{aux.project}}/orders/{{data.order.body.id}}/
        id: PA8TE_1C6I
        meta:
          category: data
          description: ''
          label: Check Order
          name: http
          x: 840
          'y': 2620
        outputIds:
          - - vDgC2nvLC-
            - cnpN3flASL
        type: HttpNode
      - config:
          expression: '{{data.checkOrder.body.mt_cost}} != 0'
        id: vDgC2nvLC-
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 840
          'y': 2700
        outputIds:
          - - 7QfT8o4CF9
          - - Ee9_tgPU9L
        type: ConditionalNode
      - config:
          delay: '1'
        id: 7QfT8o4CF9
        meta:
          category: logic
          description: ''
          label: Delay
          name: delay
          x: 640
          'y': 2660
        outputIds:
          - - PA8TE_1C6I
        type: DelayNode
      - config:
          authCredentials: {}
          authType: none
          bodyTemplate: "{\n\t\"calculation_rule\": \"{{aux.calcRuleId}}\",\n\t\"initial_datetime\": \"{{pastTime}}\",\n\t\"final_datetime\": \"{{currentTime}}\"\n}"
          caCertTemplate: ''
          disableSSLVerification: false
          encodingTemplate: utf8
          errorBehavior: throw
          errorPath: ''
          headerInfo:
            - key: Content-Type
              valueTemplate: application/json
            - key: Authorization
              valueTemplate: ' Bearer {{data.response.body.access}}'
          method: POST
          requestEncodingTemplate: utf8
          responsePath: data.orderDispatch
          timeoutTemplate: '30'
          uriTemplate: >-
            http://api.birmind.cloud/api/v1/order/projects/{{aux.project}}/orders/{{data.order.body.id}}/dispatch/
        id: Ee9_tgPU9L
        meta:
          category: data
          description: ''
          label: Dispatch Order
          name: http
          x: 840
          'y': 2800
        outputIds:
          - - nojdzmVTz9
            - _OywmoPv4U
        type: HttpNode
      - config:
          message: ''
          property: ''
        id: cnpN3flASL
        meta:
          category: output
          description: ''
          label: Debug
          name: debug
          x: 1060
          'y': 2700
        outputIds: []
        type: DebugNode
      - config:
          message: ''
          property: ''
        id: QcTHB4NDo9
        meta:
          category: output
          description: ''
          label: Debug
          name: debug
          x: 740
          'y': 1980
        outputIds: []
        type: DebugNode
      - config:
          operation: format
          resultFormatString: 'YYYY-MM-DD HH:mm:ss'
          resultPath: currentTime
          timezone: UTC
        id: QfLFpovpdy
        meta:
          category: logic
          description: ''
          label: Date/Time
          name: date-time
          x: 1040
          'y': 1700
        outputIds:
          - - qcjraZdn8p
        type: DateTimeNode
      - config:
          numberValue: '90'
          operation: subtract
          resultFormatString: 'YYYY-MM-DD HH:mm:ss'
          resultPath: pastTime
          timezone: UTC
          unit: day
        id: qcjraZdn8p
        meta:
          category: logic
          description: ''
          label: Date/Time
          name: date-time
          x: 1040
          'y': 1780
        outputIds:
          - - nN2feOkrPS
        type: DateTimeNode
      - config:
          authCredentials: {}
          authType: none
          bodyTemplate: "{\r\n\t\"initial_datetime\": \"{{pastTime}}\",\r\n    \"final_datetime\": \"{{currentTime}}\",\r\n    \"input_list\": [\"{{aux.data_input}}\"]\r\n}"
          caCertTemplate: ''
          disableSSLVerification: false
          encodingTemplate: utf8
          errorBehavior: throw
          errorPath: ''
          headerInfo:
            - key: Content-Type
              valueTemplate: application/json
            - key: Authorization
              valueTemplate: ' Bearer {{data.response.body.access}}'
          method: POST
          requestEncodingTemplate: utf8
          responsePath: data.timeseriesAPI
          timeoutTemplate: '30'
          uriTemplate: >-
            http://api.birmind.cloud/api/v1/data/projects/{{aux.project}}/data-values/search/?resample_freq={{data.resampleFrequency}}
        id: QDemoGA65W
        meta:
          category: data
          description: ''
          label: Get TimeSeries
          name: http
          x: 1040
          'y': 1940
        outputIds:
          - - 5CuJ-LJoFW
        type: HttpNode
      - config:
          script: "if (payload.data.predictionStep == 24){\r\n  payload.data.resampleFrequency = '1D'\r\n} else {\r\n  payload.data.resampleFrequency = String(payload.data.predictionStep)+\"H\"\r\n}\r\n\r\n\r\n\r\n"
        id: nN2feOkrPS
        meta:
          category: logic
          description: ''
          label: Function
          name: function
          x: 1040
          'y': 1860
        outputIds:
          - - QDemoGA65W
        type: RawFunctionNode
      - config:
          script: "payload.data.timeseriesOld = payload.data.timeseriesAPI.body.map(function(x,i){\r\n    return {\"value\":x['value'],\"timestamp\":x['timestamp']}\r\n})\r\n"
        id: QGmNhyP_Jl
        meta:
          category: logic
          description: ''
          label: Function
          name: function
          x: 1040
          'y': 2140
        outputIds:
          - - 3Xel4-b7dw
        type: RawFunctionNode
      - config:
          script: >-
            if (payload.data.timeseriesAPI.body.length < payload.data.points *
            5) {
                payload.data.output = "NoPrediction"
                payload.data.requiredPoints = payload.data.points * 5
            }


            //1 hora, 3 horas, 6 horas, 8 horas, 12 horas, 24 horas
        id: JwleDJn_dq
        meta:
          category: logic
          description: ''
          label: Function
          name: function
          x: 1020
          'y': 2480
        outputIds:
          - - 8BH7XflHTQ
        type: RawFunctionNode
      - config:
          message: ''
          property: ''
        id: _OywmoPv4U
        meta:
          category: output
          description: ''
          label: Debug
          name: debug
          x: 1040
          'y': 2920
        outputIds: []
        type: DebugNode
      - config:
          delay: '10'
        id: 20QXQzcuCu
        meta:
          category: logic
          description: ''
          label: Delay
          name: delay
          x: 560
          'y': 4220
        outputIds:
          - - evtlwypg8H
        type: DelayNode
      - config:
          message: ''
          property: ''
        id: vDYQtMzkeF
        meta:
          category: output
          description: ''
          label: Debug
          name: debug
          x: 480
          'y': 3100
        outputIds: []
        type: DebugNode
      - config:
          authCredentials: {}
          authType: none
          bodyTemplate: "{   \n\t\t\"calculation_rule\":\"{{aux.calcRuleId}}\",\n\t\t\"datetime_range_type\":\"calculation_window\",\n\t\t\"calculation_frequency\":{\n\t\t\t\"days\":{{data.predictionFrequency}}\n\t\t},\n\t\t\"calculation_window\":{\n\t\t\t\"days\":{{data.daysUsedPrediction}}\n\t\t}\n}"
          caCertTemplate: ''
          disableSSLVerification: false
          encodingTemplate: utf8
          errorBehavior: throw
          errorPath: ''
          headerInfo:
            - key: Content-Type
              valueTemplate: application/json
            - key: Authorization
              valueTemplate: ' Bearer {{data.response.body.access}}'
          method: POST
          requestEncodingTemplate: utf8
          responsePath: data.calcRuleScheduler
          timeoutTemplate: '30'
          uriTemplate: >-
            http://api.birmind.cloud/api/v1/calc/projects/{{data.projeto}}/calculation-schedulers/
        id: 7QrtmKnbr7
        meta:
          category: data
          description: ''
          label: Create Scheduler
          name: http
          x: 560
          'y': 4380
        outputIds:
          - - jFUTmTYBsr
        type: HttpNode
      - config:
          expression: '{{data.callback}} == ''null'''
        id: evtlwypg8H
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 560
          'y': 4300
        outputIds:
          - - yAk0LfdQGP
          - - 7QrtmKnbr7
        type: ConditionalNode
      - config:
          authCredentials: {}
          authType: none
          bodyTemplate: "{   \n\t\t\"calculation_rule\":\"{{aux.calcRuleId}}\",\n\t\t\"datetime_range_type\":\"calculation_window\",\n\t\t\"calculation_frequency\":{\n\t\t\t\"days\":{{data.predictionFrequency}}\n\t\t},\n\t\t\"calculation_window\":{\n\t\t\t\"days\":{{data.daysUsedPrediction}}\n\t\t},\n\t\t\"callback_type\": \"api\",\n\t\t\"callback_data\": {\n\t\t\t\"url\":\"{{data.callback}}\"\n\t\t}\n}"
          caCertTemplate: ''
          disableSSLVerification: false
          encodingTemplate: utf8
          errorBehavior: throw
          errorPath: ''
          headerInfo:
            - key: Content-Type
              valueTemplate: application/json
            - key: Authorization
              valueTemplate: ' Bearer {{data.response.body.access}}'
          method: POST
          requestEncodingTemplate: utf8
          responsePath: data.calcRuleScheduler
          timeoutTemplate: '30'
          uriTemplate: >-
            http://api.birmind.cloud/api/v1/calc/projects/{{data.projeto}}/calculation-schedulers/
        id: yAk0LfdQGP
        meta:
          category: data
          description: ''
          label: Create Scheduler
          name: http
          x: 360
          'y': 4380
        outputIds:
          - - jFUTmTYBsr
        type: HttpNode
      - config:
          rules:
            - destination: aux.schedulerId
              type: set
              valueTemplate: '{{data.calcRuleScheduler.body.id}}'
        id: pYa8FQqvxy
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 460
          'y': 4540
        outputIds:
          - - zLLIejcZeM
        type: MutateNode
      - config:
          delay: '1'
        id: fi0b3LD49V
        meta:
          category: logic
          description: ''
          label: Delay
          name: delay
          x: 920
          'y': 4040
        outputIds:
          - - mDdf5FN0SR
        type: DelayNode
      - config:
          expression: '{{aux}}'
        id: qREtF3uyOV
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 660
          'y': 280
        outputIds:
          - - o1AB1-tv1p
          - - Eg4Jj_m3zD
        type: ConditionalNode
      - config:
          script: "const project = payload.aux.project\r\n\r\nif ( (payload.data.attName != payload.aux.attName) || (payload.data.deviceId != payload.aux.deviceId) ){\r\n\r\n    delete payload.aux\r\n    payload.aux = {'project':project}\r\n    payload.data.projectId = project\r\n    payload.data.output = 'NewPrediction'\r\n    payload.deletar = 1\r\n    \r\n}"
        id: Eg4Jj_m3zD
        meta:
          category: logic
          description: ''
          label: Function
          name: function
          x: 740
          'y': 360
        outputIds:
          - - AI7DUVr2tO
        type: RawFunctionNode
      - config:
          expression: '{{deletar}}'
        id: AI7DUVr2tO
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 740
          'y': 440
        outputIds:
          - - o1AB1-tv1p
          - - eUzyxb5Kcw
        type: ConditionalNode
      - config:
          keyName: aux
          resultPath: ''
          value: aux
          valueType: path
        id: x055Ni82k3
        meta:
          category: data
          description: ''
          label: 'Storage: Set Value'
          name: store-value
          x: 820
          'y': 620
        outputIds:
          - - rmKnDi4lof
        type: StoreValueNode
      - config:
          authCredentials: {}
          authType: none
          caCertTemplate: ''
          disableSSLVerification: false
          encodingTemplate: utf8
          errorBehavior: throw
          errorPath: ''
          headerInfo:
            - key: Content-Type
              valueTemplate: application/json
            - key: Authorization
              valueTemplate: 'Bearer {{data.response.body.access}}'
          method: DELETE
          requestEncodingTemplate: utf8
          responsePath: data.deleteScheduler
          timeoutTemplate: ''
          uriTemplate: >-
            https://api.birmind.cloud/api/v1/calc/projects/{{aux.project}}/calculation-schedulers/{{aux.schedulerId}}/
        id: eUzyxb5Kcw
        meta:
          category: data
          description: ''
          label: HTTP
          name: http
          x: 820
          'y': 520
        outputIds:
          - - x055Ni82k3
        type: HttpNode
      - config:
          expression: '{{data.forecastResult.statusCode}} < 300'
        id: CjmvdjZ_4S
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 880
          'y': 1200
        outputIds:
          - - hCRzY2qMyb
          - - dmly02kP-M
        type: ConditionalNode
      - config:
          delay: '1'
        id: hCRzY2qMyb
        meta:
          category: logic
          description: ''
          label: Delay
          name: delay
          x: 680
          'y': 1200
        outputIds:
          - - ZFivwgYIQb
        type: DelayNode
      - config:
          expression: '{{data.timeseriesAPI.statusCode}} < 300'
        id: 5CuJ-LJoFW
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 1040
          'y': 2020
        outputIds:
          - - Z7kCylmfk8
          - - QGmNhyP_Jl
        type: ConditionalNode
      - config:
          delay: '1'
        id: Z7kCylmfk8
        meta:
          category: logic
          description: ''
          label: Delay
          name: delay
          x: 1240
          'y': 2020
        outputIds:
          - - QDemoGA65W
        type: DelayNode
      - config:
          expression: '{{data.calcRuleScheduler.statusCode}} < 300'
        id: jFUTmTYBsr
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 460
          'y': 4460
        outputIds:
          - - tmXuKzpsx_
          - - pYa8FQqvxy
        type: ConditionalNode
      - config:
          delay: '1'
        id: tmXuKzpsx_
        meta:
          category: logic
          description: ''
          label: Delay
          name: delay
          x: 120
          'y': 4380
        outputIds:
          - - evtlwypg8H
        type: DelayNode
      - config:
          expression: '{{data.projeto}}'
        id: rmKnDi4lof
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 340
          'y': 780
        outputIds:
          - - yL1YbaFYJf
          - - bx3Bj3u8rm
        type: ConditionalNode
      - config:
          expression: '{{data.project.statusCode}} < 300'
        id: 3Qo8_2oYJI
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 200
          'y': 960
        outputIds:
          - - '-nxdCyT8lA'
          - - JLVEAFYt3u
        type: ConditionalNode
      - config:
          delay: '1'
        id: '-nxdCyT8lA'
        meta:
          category: logic
          description: ''
          label: Delay
          name: delay
          x: 0
          'y': 920
        outputIds:
          - - yL1YbaFYJf
        type: DelayNode
      - config:
          expression: '{{data.licenseOrder.statusCode}} < 300'
        id: pb4_QRM6hb
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 200
          'y': 1200
        outputIds:
          - - sUfCpmj_OI
          - - C7_PFLcXFO
        type: ConditionalNode
      - config:
          delay: '1'
        id: sUfCpmj_OI
        meta:
          category: logic
          description: ''
          label: Delay
          name: delay
          x: 0
          'y': 1160
        outputIds:
          - - iwAKQRhBtv
        type: DelayNode
      - config:
          expression: '{{data.confirmLicense.statusCode}} < 300'
        id: 2LBJj6B9op
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 200
          'y': 1600
        outputIds:
          - - q-EJ4o5P-C
          - - a4XJLv65CU
        type: ConditionalNode
      - config:
          delay: '1'
        id: q-EJ4o5P-C
        meta:
          category: logic
          description: ''
          label: Delay
          name: delay
          x: 0
          'y': 1520
        outputIds:
          - - wasadXp6MG
        type: DelayNode
      - config:
          message: ''
          property: ''
        id: LukwHZmUje
        meta:
          category: output
          description: ''
          label: Debug
          name: debug
          x: 40
          'y': 2900
        outputIds: []
        type: DebugNode
      - config:
          message: ''
          property: ''
        id: 7kA9jdxbQC
        meta:
          category: output
          description: ''
          label: Debug
          name: debug
          x: 260
          'y': 3940
        outputIds: []
        type: DebugNode
      - config:
          rules:
            - destination: data.projectId
              type: set
              valueTemplate: '{{data.projeto}}'
            - destination: data.output
              type: set
              valueTemplate: NewPrediction
        id: bx3Bj3u8rm
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 400
          'y': 1020
        outputIds:
          - - _BCQjngYyb
        type: MutateNode
    triggers:
      - config: {}
        key: customNodeStart
        meta:
          category: trigger
          description: The Custom Node fires here ...
          label: 'Start: Custom Node Predict MFM'
          name: customNodeStart
          uiId: SywHdN5P6W
          x: 660
          'y': 20
        outputIds:
          - - 682fr5Ibo0
        type: customNodeStart
      - config: {}
        key: >-
          ~exportplaceholderid-flow-customNodePredictMfm-0~-zrM95-fj8IOKJZm6gK7TY
        meta:
          category: trigger
          description: ''
          deviceId: null
          label: Virtual Button
          name: virtualButton
          payload: "{\r\n    \"deviceId\":\"5f99a795227ea70006df36ca\",\r\n    \"attName\":\"motorTemperature\",\r\n    \"attNameStatus\":\"\",\r\n    \"points\":30,\r\n    \"bmdUser\":\"weg_user\",\r\n    \"bmdPassword\":\"WEG@BirminD1234\",\r\n    \"project\":3060,\r\n    \"upperCriticalLimit\":60,\r\n    \"upperAcceptableLimit\":30,\r\n    \"ratedValue\":20,\r\n    \"lowerAcceptableLimit\":\"\",\r\n    \"lowerCriticalLimit\":\"\",\r\n    \"email\":\"roberto.eyama@gmail.com\",\r\n    \"alarms\":\"\",\r\n    \"aux\":{\r\n        \"upadateCalcRule\":\"2month\",\r\n        \"calcRuleId\":\"efbf7424-e70e-44f8-9dd1-1c5295334708\",\r\n        \"lastTimeSeries\":\"2020-11-16T17:20:00.000Z\",\r\n        \"preprocessRule\":\"1e55ace6-70df-4c3c-a43c-d3ffc5a366dc\",\r\n        \"data_input_kpi\":\"1aeee3ea-233d-431b-9553-8b793e5b4a42\",\r\n        \"data_input\":\"e23fcab8-fe2d-431f-a3b2-e193ec00ca05\"\r\n    }\r\n}"
          uiId: sEnylQA6gr
          x: 1220
          'y': 600
        outputIds:
          - - HUtTrE9Z9Z
        type: virtualButton
      - config: {}
        key: >-
          ~exportplaceholderid-flow-customNodePredictMfm-0~-XsXRByuFo4r1qUG2X-WZm
        meta:
          category: trigger
          description: ''
          deviceId: null
          label: Virtual Button
          name: virtualButton
          payload: "{\r\n    \"deviceId\":\"5f99a795227ea70006df36ca\",\r\n    \"attName\":\"motorTemperature\",\r\n    \"attNameStatus\":\"\",\r\n    \"points\":30,\r\n    \"bmdUser\":\"aplicacao_demo\",\r\n    \"bmdPassword\":\"YX8@T)nr7M\",\r\n    \"projeto\":3060,\r\n    \"upperCriticalLimit\":60,\r\n    \"upperAcceptableLimit\":30,\r\n    \"ratedValue\":20,\r\n    \"lowerAcceptableLimit\":\"\",\r\n    \"lowerCriticalLimit\":\"\",\r\n    \"email\":\"roberto.eyama@gmail.com\",\r\n    \"alarms\":\"\",\r\n    \"aux\":{\r\n        \"upadateCalcRule\":\"2month\",\r\n        \"calcRuleId\":\"efbf7424-e70e-44f8-9dd1-1c5295334708\",\r\n        \"lastTimeSeries\":\"2020-11-16T17:20:00.000Z\",\r\n        \"preprocessRule\":\"1e55ace6-70df-4c3c-a43c-d3ffc5a366dc\",\r\n        \"data_input_kpi\":\"1aeee3ea-233d-431b-9553-8b793e5b4a42\",\r\n        \"data_input\":\"e23fcab8-fe2d-431f-a3b2-e193ec00ca05\"\r\n    }\r\n}"
          uiId: RIeyg5PgGF
          x: 1240
          'y': 100
        outputIds:
          - - YeToa58H6a
        type: virtualButton
      - config: {}
        key: >-
          ~exportplaceholderid-flow-customNodePredictMfm-0~-bL47kg27vPFd3R7OqzHFv
        meta:
          category: trigger
          description: ''
          deviceId: null
          label: Virtual Button
          name: virtualButton
          payload: ''
          uiId: ihPwDvRgoD
          x: 1500
          'y': 80
        outputIds:
          - - O_9xMnHCgW
        type: virtualButton
      - config: {}
        key: >-
          ~exportplaceholderid-flow-customNodePredictMfm-0~-5z6J3-Zb9U-tvs7iPDubQ
        meta:
          category: trigger
          description: ''
          deviceId: null
          label: Virtual Button
          name: virtualButton
          payload: "{\r\n    \"deviceId\":\"610b3537955fa10006d5ebca\",\r\n    \"attName\":\"Daily_Yield\",\r\n    \"attNameStatus\":\"\",\r\n    \"points\":48,\r\n    \"bmdUser\":\"demonstracao\",\r\n    \"bmdPassword\":\"Mudar#123\",\r\n    \"projeto\":3013,\r\n    \"companyId\":\"d8f1421e-50d9-4a81-92e5-f549d14a4617\",\r\n    \"upperCriticalLimit\":null,\r\n    \"upperAcceptableLimit\":null,\r\n    \"ratedValue\":null,\r\n    \"lowerAcceptableLimit\":\"\",\r\n    \"lowerCriticalLimit\":\"\",\r\n    \"email\":\"roberto.eyama@gmail.com\",\r\n    \"alarms\":false\r\n}"
          uiId: GBYkuajsmj
          x: 900
          'y': 20
        outputIds:
          - - 682fr5Ibo0
        type: virtualButton
version: 1
